//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public static Dictionary<Type, DelegateManager.DelegateCreate> dict = new Dictionary<Type, DelegateManager.DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		DelegateManager.dict.Clear();
		DelegateManager.dict.Add(typeof(System.Action), factory.System_Action);
		DelegateManager.dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		DelegateManager.dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		DelegateManager.dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		DelegateManager.dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		DelegateManager.dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		DelegateManager.dict.Add(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateManager.dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		DelegateManager.dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateManager.dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		DelegateManager.dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateManager.dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateManager.dict.Add(typeof(System.Action<pure.mvc.view.MediatorEventType>), factory.System_Action_pure_mvc_view_MediatorEventType);
		DelegateManager.dict.Add(typeof(System.Func<string,pure.treeComp.firefx.core.FireFxRoot>), factory.System_Func_string_pure_treeComp_firefx_core_FireFxRoot);
		DelegateManager.dict.Add(typeof(System.Predicate<pure.database.interfaces.IData>), factory.System_Predicate_pure_database_interfaces_IData);
		DelegateManager.dict.Add(typeof(System.Action<pure.database.interfaces.IData>), factory.System_Action_pure_database_interfaces_IData);
		DelegateManager.dict.Add(typeof(System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData>), factory.System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData);
		DelegateManager.dict.Add(typeof(System.Action<string,object,object>), factory.System_Action_string_object_object);
		DelegateManager.dict.Add(typeof(System.Action<pure.net.http.LoadStatus>), factory.System_Action_pure_net_http_LoadStatus);
		DelegateManager.dict.Add(typeof(System.Action<pure.scene.manager.SceneEventType>), factory.System_Action_pure_scene_manager_SceneEventType);
		DelegateManager.dict.Add(typeof(System.Action<LuaInterface.LuaTable>), factory.System_Action_LuaInterface_LuaTable);
		DelegateManager.dict.Add(typeof(System.Action<string,bool>), factory.System_Action_string_bool);
		DelegateManager.dict.Add(typeof(System.Action<object>), factory.System_Action_object);
		DelegateManager.dict.Add(typeof(pure.utils.tween.TweenEasingCallback), factory.pure_utils_tween_TweenEasingCallback);
		DelegateManager.dict.Add(typeof(pure.utils.tween.TweenCallback), factory.pure_utils_tween_TweenCallback);
		DelegateManager.dict.Add(typeof(System.Action<string>), factory.System_Action_string);
		DelegateManager.dict.Add(typeof(System.Action<string,int>), factory.System_Action_string_int);
		DelegateManager.dict.Add(typeof(System.Action<string,pure.ui.events.ListEvent>), factory.System_Action_string_pure_ui_events_ListEvent);
		DelegateManager.dict.Add(typeof(UnityEngine.Events.UnityAction<bool>), factory.UnityEngine_Events_UnityAction_bool);
		DelegateManager.dict.Add(typeof(System.Action<string,pure.ui.events.Dropper>), factory.System_Action_string_pure_ui_events_Dropper);
		DelegateManager.dict.Add(typeof(System.Action<pure.ui.element.MovieEvent>), factory.System_Action_pure_ui_element_MovieEvent);
		DelegateManager.dict.Add(typeof(System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket>), factory.System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.Action<pure.mvc.view.MediatorEventType>>.Init(factory.System_Action_pure_mvc_view_MediatorEventType);
		DelegateTraits<System.Func<string,pure.treeComp.firefx.core.FireFxRoot>>.Init(factory.System_Func_string_pure_treeComp_firefx_core_FireFxRoot);
		DelegateTraits<System.Predicate<pure.database.interfaces.IData>>.Init(factory.System_Predicate_pure_database_interfaces_IData);
		DelegateTraits<System.Action<pure.database.interfaces.IData>>.Init(factory.System_Action_pure_database_interfaces_IData);
		DelegateTraits<System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData>>.Init(factory.System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData);
		DelegateTraits<System.Action<string,object,object>>.Init(factory.System_Action_string_object_object);
		DelegateTraits<System.Action<pure.net.http.LoadStatus>>.Init(factory.System_Action_pure_net_http_LoadStatus);
		DelegateTraits<System.Action<pure.scene.manager.SceneEventType>>.Init(factory.System_Action_pure_scene_manager_SceneEventType);
		DelegateTraits<System.Action<LuaInterface.LuaTable>>.Init(factory.System_Action_LuaInterface_LuaTable);
		DelegateTraits<System.Action<string,bool>>.Init(factory.System_Action_string_bool);
		DelegateTraits<System.Action<object>>.Init(factory.System_Action_object);
		DelegateTraits<pure.utils.tween.TweenEasingCallback>.Init(factory.pure_utils_tween_TweenEasingCallback);
		DelegateTraits<pure.utils.tween.TweenCallback>.Init(factory.pure_utils_tween_TweenCallback);
		DelegateTraits<System.Action<string>>.Init(factory.System_Action_string);
		DelegateTraits<System.Action<string,int>>.Init(factory.System_Action_string_int);
		DelegateTraits<System.Action<string,pure.ui.events.ListEvent>>.Init(factory.System_Action_string_pure_ui_events_ListEvent);
		DelegateTraits<UnityEngine.Events.UnityAction<bool>>.Init(factory.UnityEngine_Events_UnityAction_bool);
		DelegateTraits<System.Action<string,pure.ui.events.Dropper>>.Init(factory.System_Action_string_pure_ui_events_Dropper);
		DelegateTraits<System.Action<pure.ui.element.MovieEvent>>.Init(factory.System_Action_pure_ui_element_MovieEvent);
		DelegateTraits<System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket>>.Init(factory.System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.Check_UnityEngine_RectTransform_ReapplyDrivenProperties);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.Action<pure.mvc.view.MediatorEventType>>.Init(factory.Check_System_Action_pure_mvc_view_MediatorEventType);
		TypeTraits<System.Func<string,pure.treeComp.firefx.core.FireFxRoot>>.Init(factory.Check_System_Func_string_pure_treeComp_firefx_core_FireFxRoot);
		TypeTraits<System.Predicate<pure.database.interfaces.IData>>.Init(factory.Check_System_Predicate_pure_database_interfaces_IData);
		TypeTraits<System.Action<pure.database.interfaces.IData>>.Init(factory.Check_System_Action_pure_database_interfaces_IData);
		TypeTraits<System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData>>.Init(factory.Check_System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData);
		TypeTraits<System.Action<string,object,object>>.Init(factory.Check_System_Action_string_object_object);
		TypeTraits<System.Action<pure.net.http.LoadStatus>>.Init(factory.Check_System_Action_pure_net_http_LoadStatus);
		TypeTraits<System.Action<pure.scene.manager.SceneEventType>>.Init(factory.Check_System_Action_pure_scene_manager_SceneEventType);
		TypeTraits<System.Action<LuaInterface.LuaTable>>.Init(factory.Check_System_Action_LuaInterface_LuaTable);
		TypeTraits<System.Action<string,bool>>.Init(factory.Check_System_Action_string_bool);
		TypeTraits<System.Action<object>>.Init(factory.Check_System_Action_object);
		TypeTraits<pure.utils.tween.TweenEasingCallback>.Init(factory.Check_pure_utils_tween_TweenEasingCallback);
		TypeTraits<pure.utils.tween.TweenCallback>.Init(factory.Check_pure_utils_tween_TweenCallback);
		TypeTraits<System.Action<string>>.Init(factory.Check_System_Action_string);
		TypeTraits<System.Action<string,int>>.Init(factory.Check_System_Action_string_int);
		TypeTraits<System.Action<string,pure.ui.events.ListEvent>>.Init(factory.Check_System_Action_string_pure_ui_events_ListEvent);
		TypeTraits<UnityEngine.Events.UnityAction<bool>>.Init(factory.Check_UnityEngine_Events_UnityAction_bool);
		TypeTraits<System.Action<string,pure.ui.events.Dropper>>.Init(factory.Check_System_Action_string_pure_ui_events_Dropper);
		TypeTraits<System.Action<pure.ui.element.MovieEvent>>.Init(factory.Check_System_Action_pure_ui_element_MovieEvent);
		TypeTraits<System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket>>.Init(factory.Check_System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Push = factory.Push_UnityEngine_RectTransform_ReapplyDrivenProperties;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.Action<pure.mvc.view.MediatorEventType>>.Push = factory.Push_System_Action_pure_mvc_view_MediatorEventType;
		StackTraits<System.Func<string,pure.treeComp.firefx.core.FireFxRoot>>.Push = factory.Push_System_Func_string_pure_treeComp_firefx_core_FireFxRoot;
		StackTraits<System.Predicate<pure.database.interfaces.IData>>.Push = factory.Push_System_Predicate_pure_database_interfaces_IData;
		StackTraits<System.Action<pure.database.interfaces.IData>>.Push = factory.Push_System_Action_pure_database_interfaces_IData;
		StackTraits<System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData>>.Push = factory.Push_System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData;
		StackTraits<System.Action<string,object,object>>.Push = factory.Push_System_Action_string_object_object;
		StackTraits<System.Action<pure.net.http.LoadStatus>>.Push = factory.Push_System_Action_pure_net_http_LoadStatus;
		StackTraits<System.Action<pure.scene.manager.SceneEventType>>.Push = factory.Push_System_Action_pure_scene_manager_SceneEventType;
		StackTraits<System.Action<LuaInterface.LuaTable>>.Push = factory.Push_System_Action_LuaInterface_LuaTable;
		StackTraits<System.Action<string,bool>>.Push = factory.Push_System_Action_string_bool;
		StackTraits<System.Action<object>>.Push = factory.Push_System_Action_object;
		StackTraits<pure.utils.tween.TweenEasingCallback>.Push = factory.Push_pure_utils_tween_TweenEasingCallback;
		StackTraits<pure.utils.tween.TweenCallback>.Push = factory.Push_pure_utils_tween_TweenCallback;
		StackTraits<System.Action<string>>.Push = factory.Push_System_Action_string;
		StackTraits<System.Action<string,int>>.Push = factory.Push_System_Action_string_int;
		StackTraits<System.Action<string,pure.ui.events.ListEvent>>.Push = factory.Push_System_Action_string_pure_ui_events_ListEvent;
		StackTraits<UnityEngine.Events.UnityAction<bool>>.Push = factory.Push_UnityEngine_Events_UnityAction_bool;
		StackTraits<System.Action<string,pure.ui.events.Dropper>>.Push = factory.Push_System_Action_string_pure_ui_events_Dropper;
		StackTraits<System.Action<pure.ui.element.MovieEvent>>.Push = factory.Push_System_Action_pure_ui_element_MovieEvent;
		StackTraits<System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket>>.Push = factory.Push_System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket;
	}
	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), L, pos);
	}

	void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, UnityEngine.RectTransform.ReapplyDrivenProperties o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_pure_mvc_view_MediatorEventType_Event : LuaDelegate
	{
		public System_Action_pure_mvc_view_MediatorEventType_Event(LuaFunction func) : base(func) { }
		public System_Action_pure_mvc_view_MediatorEventType_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.mvc.view.MediatorEventType param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.mvc.view.MediatorEventType param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<pure.mvc.view.MediatorEventType> System_Action_pure_mvc_view_MediatorEventType(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<pure.mvc.view.MediatorEventType> fn = delegate(pure.mvc.view.MediatorEventType param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_pure_mvc_view_MediatorEventType_Event target = new System_Action_pure_mvc_view_MediatorEventType_Event(func);
			System.Action<pure.mvc.view.MediatorEventType> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_pure_mvc_view_MediatorEventType_Event target = new System_Action_pure_mvc_view_MediatorEventType_Event(func, self);
			System.Action<pure.mvc.view.MediatorEventType> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_pure_mvc_view_MediatorEventType(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<pure.mvc.view.MediatorEventType>), L, pos);
	}

	void Push_System_Action_pure_mvc_view_MediatorEventType(IntPtr L, System.Action<pure.mvc.view.MediatorEventType> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_string_pure_treeComp_firefx_core_FireFxRoot_Event : LuaDelegate
	{
		public System_Func_string_pure_treeComp_firefx_core_FireFxRoot_Event(LuaFunction func) : base(func) { }
		public System_Func_string_pure_treeComp_firefx_core_FireFxRoot_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public pure.treeComp.firefx.core.FireFxRoot Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			pure.treeComp.firefx.core.FireFxRoot ret = (pure.treeComp.firefx.core.FireFxRoot)func.CheckObject(typeof(pure.treeComp.firefx.core.FireFxRoot));
			func.EndPCall();
			return ret;
		}

		public pure.treeComp.firefx.core.FireFxRoot CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			pure.treeComp.firefx.core.FireFxRoot ret = (pure.treeComp.firefx.core.FireFxRoot)func.CheckObject(typeof(pure.treeComp.firefx.core.FireFxRoot));
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<string,pure.treeComp.firefx.core.FireFxRoot> System_Func_string_pure_treeComp_firefx_core_FireFxRoot(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<string,pure.treeComp.firefx.core.FireFxRoot> fn = delegate(string param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			System_Func_string_pure_treeComp_firefx_core_FireFxRoot_Event target = new System_Func_string_pure_treeComp_firefx_core_FireFxRoot_Event(func);
			System.Func<string,pure.treeComp.firefx.core.FireFxRoot> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_string_pure_treeComp_firefx_core_FireFxRoot_Event target = new System_Func_string_pure_treeComp_firefx_core_FireFxRoot_Event(func, self);
			System.Func<string,pure.treeComp.firefx.core.FireFxRoot> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_string_pure_treeComp_firefx_core_FireFxRoot(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<string,pure.treeComp.firefx.core.FireFxRoot>), L, pos);
	}

	void Push_System_Func_string_pure_treeComp_firefx_core_FireFxRoot(IntPtr L, System.Func<string,pure.treeComp.firefx.core.FireFxRoot> o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_pure_database_interfaces_IData_Event : LuaDelegate
	{
		public System_Predicate_pure_database_interfaces_IData_Event(LuaFunction func) : base(func) { }
		public System_Predicate_pure_database_interfaces_IData_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(pure.database.interfaces.IData param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(pure.database.interfaces.IData param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<pure.database.interfaces.IData> System_Predicate_pure_database_interfaces_IData(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<pure.database.interfaces.IData> fn = delegate(pure.database.interfaces.IData param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_pure_database_interfaces_IData_Event target = new System_Predicate_pure_database_interfaces_IData_Event(func);
			System.Predicate<pure.database.interfaces.IData> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_pure_database_interfaces_IData_Event target = new System_Predicate_pure_database_interfaces_IData_Event(func, self);
			System.Predicate<pure.database.interfaces.IData> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_pure_database_interfaces_IData(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<pure.database.interfaces.IData>), L, pos);
	}

	void Push_System_Predicate_pure_database_interfaces_IData(IntPtr L, System.Predicate<pure.database.interfaces.IData> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_pure_database_interfaces_IData_Event : LuaDelegate
	{
		public System_Action_pure_database_interfaces_IData_Event(LuaFunction func) : base(func) { }
		public System_Action_pure_database_interfaces_IData_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.database.interfaces.IData param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.database.interfaces.IData param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<pure.database.interfaces.IData> System_Action_pure_database_interfaces_IData(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<pure.database.interfaces.IData> fn = delegate(pure.database.interfaces.IData param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_pure_database_interfaces_IData_Event target = new System_Action_pure_database_interfaces_IData_Event(func);
			System.Action<pure.database.interfaces.IData> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_pure_database_interfaces_IData_Event target = new System_Action_pure_database_interfaces_IData_Event(func, self);
			System.Action<pure.database.interfaces.IData> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_pure_database_interfaces_IData(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<pure.database.interfaces.IData>), L, pos);
	}

	void Push_System_Action_pure_database_interfaces_IData(IntPtr L, System.Action<pure.database.interfaces.IData> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData_Event : LuaDelegate
	{
		public System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData_Event(LuaFunction func) : base(func) { }
		public System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.database.core.Table.DataEvent param0, pure.database.interfaces.IData param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.database.core.Table.DataEvent param0, pure.database.interfaces.IData param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData> System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData> fn = delegate(pure.database.core.Table.DataEvent param0, pure.database.interfaces.IData param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData_Event target = new System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData_Event(func);
			System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData_Event target = new System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData_Event(func, self);
			System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData>), L, pos);
	}

	void Push_System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData(IntPtr L, System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_object_object_Event : LuaDelegate
	{
		public System_Action_string_object_object_Event(LuaFunction func) : base(func) { }
		public System_Action_string_object_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, object param1, object param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, object param1, object param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,object,object> System_Action_string_object_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,object,object> fn = delegate(string param0, object param1, object param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_object_object_Event target = new System_Action_string_object_object_Event(func);
			System.Action<string,object,object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_object_object_Event target = new System_Action_string_object_object_Event(func, self);
			System.Action<string,object,object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_object_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string,object,object>), L, pos);
	}

	void Push_System_Action_string_object_object(IntPtr L, System.Action<string,object,object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_pure_net_http_LoadStatus_Event : LuaDelegate
	{
		public System_Action_pure_net_http_LoadStatus_Event(LuaFunction func) : base(func) { }
		public System_Action_pure_net_http_LoadStatus_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.net.http.LoadStatus param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.net.http.LoadStatus param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<pure.net.http.LoadStatus> System_Action_pure_net_http_LoadStatus(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<pure.net.http.LoadStatus> fn = delegate(pure.net.http.LoadStatus param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_pure_net_http_LoadStatus_Event target = new System_Action_pure_net_http_LoadStatus_Event(func);
			System.Action<pure.net.http.LoadStatus> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_pure_net_http_LoadStatus_Event target = new System_Action_pure_net_http_LoadStatus_Event(func, self);
			System.Action<pure.net.http.LoadStatus> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_pure_net_http_LoadStatus(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<pure.net.http.LoadStatus>), L, pos);
	}

	void Push_System_Action_pure_net_http_LoadStatus(IntPtr L, System.Action<pure.net.http.LoadStatus> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_pure_scene_manager_SceneEventType_Event : LuaDelegate
	{
		public System_Action_pure_scene_manager_SceneEventType_Event(LuaFunction func) : base(func) { }
		public System_Action_pure_scene_manager_SceneEventType_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.scene.manager.SceneEventType param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.scene.manager.SceneEventType param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<pure.scene.manager.SceneEventType> System_Action_pure_scene_manager_SceneEventType(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<pure.scene.manager.SceneEventType> fn = delegate(pure.scene.manager.SceneEventType param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_pure_scene_manager_SceneEventType_Event target = new System_Action_pure_scene_manager_SceneEventType_Event(func);
			System.Action<pure.scene.manager.SceneEventType> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_pure_scene_manager_SceneEventType_Event target = new System_Action_pure_scene_manager_SceneEventType_Event(func, self);
			System.Action<pure.scene.manager.SceneEventType> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_pure_scene_manager_SceneEventType(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<pure.scene.manager.SceneEventType>), L, pos);
	}

	void Push_System_Action_pure_scene_manager_SceneEventType(IntPtr L, System.Action<pure.scene.manager.SceneEventType> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_LuaInterface_LuaTable_Event : LuaDelegate
	{
		public System_Action_LuaInterface_LuaTable_Event(LuaFunction func) : base(func) { }
		public System_Action_LuaInterface_LuaTable_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(LuaInterface.LuaTable param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(LuaInterface.LuaTable param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<LuaInterface.LuaTable> System_Action_LuaInterface_LuaTable(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<LuaInterface.LuaTable> fn = delegate(LuaInterface.LuaTable param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_LuaInterface_LuaTable_Event target = new System_Action_LuaInterface_LuaTable_Event(func);
			System.Action<LuaInterface.LuaTable> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_LuaInterface_LuaTable_Event target = new System_Action_LuaInterface_LuaTable_Event(func, self);
			System.Action<LuaInterface.LuaTable> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_LuaInterface_LuaTable(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<LuaInterface.LuaTable>), L, pos);
	}

	void Push_System_Action_LuaInterface_LuaTable(IntPtr L, System.Action<LuaInterface.LuaTable> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_bool_Event : LuaDelegate
	{
		public System_Action_string_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_string_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,bool> System_Action_string_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,bool> fn = delegate(string param0, bool param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_bool_Event target = new System_Action_string_bool_Event(func);
			System.Action<string,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_bool_Event target = new System_Action_string_bool_Event(func, self);
			System.Action<string,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string,bool>), L, pos);
	}

	void Push_System_Action_string_bool(IntPtr L, System.Action<string,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_object_Event : LuaDelegate
	{
		public System_Action_object_Event(LuaFunction func) : base(func) { }
		public System_Action_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<object> System_Action_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<object> fn = delegate(object param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_object_Event target = new System_Action_object_Event(func);
			System.Action<object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_object_Event target = new System_Action_object_Event(func, self);
			System.Action<object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<object>), L, pos);
	}

	void Push_System_Action_object(IntPtr L, System.Action<object> o)
	{
		ToLua.Push(L, o);
	}

	class pure_utils_tween_TweenEasingCallback_Event : LuaDelegate
	{
		public pure_utils_tween_TweenEasingCallback_Event(LuaFunction func) : base(func) { }
		public pure_utils_tween_TweenEasingCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public pure.utils.tween.TweenEasingCallback pure_utils_tween_TweenEasingCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			pure.utils.tween.TweenEasingCallback fn = delegate(float param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			pure_utils_tween_TweenEasingCallback_Event target = new pure_utils_tween_TweenEasingCallback_Event(func);
			pure.utils.tween.TweenEasingCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			pure_utils_tween_TweenEasingCallback_Event target = new pure_utils_tween_TweenEasingCallback_Event(func, self);
			pure.utils.tween.TweenEasingCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_pure_utils_tween_TweenEasingCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(pure.utils.tween.TweenEasingCallback), L, pos);
	}

	void Push_pure_utils_tween_TweenEasingCallback(IntPtr L, pure.utils.tween.TweenEasingCallback o)
	{
		ToLua.Push(L, o);
	}

	class pure_utils_tween_TweenCallback_Event : LuaDelegate
	{
		public pure_utils_tween_TweenCallback_Event(LuaFunction func) : base(func) { }
		public pure_utils_tween_TweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.utils.tween.TweenCore param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.utils.tween.TweenCore param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public pure.utils.tween.TweenCallback pure_utils_tween_TweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			pure.utils.tween.TweenCallback fn = delegate(pure.utils.tween.TweenCore param0) { };
			return fn;
		}

		if(!flag)
		{
			pure_utils_tween_TweenCallback_Event target = new pure_utils_tween_TweenCallback_Event(func);
			pure.utils.tween.TweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			pure_utils_tween_TweenCallback_Event target = new pure_utils_tween_TweenCallback_Event(func, self);
			pure.utils.tween.TweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_pure_utils_tween_TweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(pure.utils.tween.TweenCallback), L, pos);
	}

	void Push_pure_utils_tween_TweenCallback(IntPtr L, pure.utils.tween.TweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_Event : LuaDelegate
	{
		public System_Action_string_Event(LuaFunction func) : base(func) { }
		public System_Action_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string> System_Action_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_Event target = new System_Action_string_Event(func);
			System.Action<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_Event target = new System_Action_string_Event(func, self);
			System.Action<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string>), L, pos);
	}

	void Push_System_Action_string(IntPtr L, System.Action<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_int_Event : LuaDelegate
	{
		public System_Action_string_int_Event(LuaFunction func) : base(func) { }
		public System_Action_string_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,int> System_Action_string_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,int> fn = delegate(string param0, int param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_int_Event target = new System_Action_string_int_Event(func);
			System.Action<string,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_int_Event target = new System_Action_string_int_Event(func, self);
			System.Action<string,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string,int>), L, pos);
	}

	void Push_System_Action_string_int(IntPtr L, System.Action<string,int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_pure_ui_events_ListEvent_Event : LuaDelegate
	{
		public System_Action_string_pure_ui_events_ListEvent_Event(LuaFunction func) : base(func) { }
		public System_Action_string_pure_ui_events_ListEvent_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, pure.ui.events.ListEvent param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, pure.ui.events.ListEvent param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,pure.ui.events.ListEvent> System_Action_string_pure_ui_events_ListEvent(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,pure.ui.events.ListEvent> fn = delegate(string param0, pure.ui.events.ListEvent param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_pure_ui_events_ListEvent_Event target = new System_Action_string_pure_ui_events_ListEvent_Event(func);
			System.Action<string,pure.ui.events.ListEvent> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_pure_ui_events_ListEvent_Event target = new System_Action_string_pure_ui_events_ListEvent_Event(func, self);
			System.Action<string,pure.ui.events.ListEvent> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_pure_ui_events_ListEvent(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string,pure.ui.events.ListEvent>), L, pos);
	}

	void Push_System_Action_string_pure_ui_events_ListEvent(IntPtr L, System.Action<string,pure.ui.events.ListEvent> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_bool_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<bool> UnityEngine_Events_UnityAction_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func);
			UnityEngine.Events.UnityAction<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func, self);
			UnityEngine.Events.UnityAction<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<bool>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_bool(IntPtr L, UnityEngine.Events.UnityAction<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_pure_ui_events_Dropper_Event : LuaDelegate
	{
		public System_Action_string_pure_ui_events_Dropper_Event(LuaFunction func) : base(func) { }
		public System_Action_string_pure_ui_events_Dropper_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, pure.ui.events.Dropper param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, pure.ui.events.Dropper param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,pure.ui.events.Dropper> System_Action_string_pure_ui_events_Dropper(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,pure.ui.events.Dropper> fn = delegate(string param0, pure.ui.events.Dropper param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_pure_ui_events_Dropper_Event target = new System_Action_string_pure_ui_events_Dropper_Event(func);
			System.Action<string,pure.ui.events.Dropper> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_pure_ui_events_Dropper_Event target = new System_Action_string_pure_ui_events_Dropper_Event(func, self);
			System.Action<string,pure.ui.events.Dropper> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_pure_ui_events_Dropper(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string,pure.ui.events.Dropper>), L, pos);
	}

	void Push_System_Action_string_pure_ui_events_Dropper(IntPtr L, System.Action<string,pure.ui.events.Dropper> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_pure_ui_element_MovieEvent_Event : LuaDelegate
	{
		public System_Action_pure_ui_element_MovieEvent_Event(LuaFunction func) : base(func) { }
		public System_Action_pure_ui_element_MovieEvent_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.ui.element.MovieEvent param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.ui.element.MovieEvent param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<pure.ui.element.MovieEvent> System_Action_pure_ui_element_MovieEvent(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<pure.ui.element.MovieEvent> fn = delegate(pure.ui.element.MovieEvent param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_pure_ui_element_MovieEvent_Event target = new System_Action_pure_ui_element_MovieEvent_Event(func);
			System.Action<pure.ui.element.MovieEvent> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_pure_ui_element_MovieEvent_Event target = new System_Action_pure_ui_element_MovieEvent_Event(func, self);
			System.Action<pure.ui.element.MovieEvent> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_pure_ui_element_MovieEvent(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<pure.ui.element.MovieEvent>), L, pos);
	}

	void Push_System_Action_pure_ui_element_MovieEvent(IntPtr L, System.Action<pure.ui.element.MovieEvent> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket_Event : LuaDelegate
	{
		public System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket_Event(LuaFunction func) : base(func) { }
		public System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(pure.voiceChat.mono.ChatStatus param0, pure.voiceChat.core.VoicePacket param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(pure.voiceChat.mono.ChatStatus param0, pure.voiceChat.core.VoicePacket param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket> System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket> fn = delegate(pure.voiceChat.mono.ChatStatus param0, pure.voiceChat.core.VoicePacket param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket_Event target = new System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket_Event(func);
			System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket_Event target = new System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket_Event(func, self);
			System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket>), L, pos);
	}

	void Push_System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket(IntPtr L, System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket> o)
	{
		ToLua.Push(L, o);
	}

}

