local class 	= require "Class"
local base 		= require "Data_Action"
local this 		= class("Data_CmdCast",base)
local tools 	= require "CommandUtils"
local tdb		= require "TypeDB"
local TypeClasses 	= require "TypeClasses"
local gameticker	= require "GameTicker"
local log 			= require "Logger"

local function shuffle(tb)
	math.randomseed(gameticker.time)
	local len = #tb
	for i=len,1,-1 do
		local index = math.random(1,len)
		local temp = tb[i]
		tb[i] = tb[index]
		tb[index] = temp
	end

	return tb
end

function this:ctor()
	self.time = 0
end
-- - is self
function this:execute(_)
	print ("Scene Health to do:"..self.id)
	-- to do
	local sType = tostring(self.type)
	local typeData = tdb.selectOne(TypeClasses.TYPE_BATTLEINFO,sType)
	if not typeData then
		log.error(string.format("no typeData! type=%s",self.type))
	end

	local d = self.table:selectOne(self.id)
	if d and d.entity then
		self.position = tools.toVector3(self.position)
		local max = typeData.maxCount

		local cv = self.changeValue

		local text = cv[1]--todo cv->text replace to img and ..

		self.text = text

		local prefab = "EP_damage_%02d"--test todo--typeData.body
		local index = math.random(1,max)
		prefab = string.format(prefab,index)

		self.prefab = prefab

		self.stateName = "FloatText"
		d.entity:ChangeState(self,1)

	end

end



return this