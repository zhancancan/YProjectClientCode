local this={}
local med

local TreePane 		= require "TreePane"

local class 		= require "Class"
local TypeClasses	= require "TypeClasses"
local typeDB		= require "TypeDB"
local ns 			= require "CSNamespace"

local error			= require "ErrorCenter"
local log 			= require "Logger"

local tree

local selection
local goalDesCell

local questData

--Item
function onTaskBtnClick()
	log.log("accept task")
end

function onTaskDesBtnClick()
	goalDesCell:SetActive("sub_0",false)
	goalDesCell:SetActive("sub_1",true)
end

function onTaskGoalBtnClick()
	goalDesCell:SetActive("sub_0",true)
	goalDesCell:SetActive("sub_1",false)
end

local item= class("TaskListItem")

function item.createItem()
	return item.new()
end

function item.pickPrefab(pane,data,index)
	return data.isMain and 0 or 1
end

function item.onInit(_,cell,data)
	if data.isMain then
    	cell:SetClickTrigger("img_0")
	else
		goalDesCell = cell
		cell:AddListener("btn_0",onTaskBtnClick)
		cell:AddListener("sub_0/btn_1",onTaskDesBtnClick)
		cell:AddListener("sub_1/btn_2",onTaskGoalBtnClick)

		if questData then
			cell:SetString("sub_1/area",questData.description)
		end
	end
end

function item.draw(_,cell,data,index)
	if(data.isMain) then
		cell:SetString("txt",data.name)
	else
		
	end
end

local function onBtnClick(btn)

end

local function onItemClick(_,evt)
	log.log(evt.index)
	questData = evt.data
	log.log(questData.description)
end

local function  onErrorReceived(err)
	log.log("create med", err.code, err.msg)
end

--Mediator
function this.show(_,chapter)
	error.addListener(onErrorReceived,this)
	local questsArr = chapter.quests

	local datas = {}
	for i=1, #questsArr do
		local t = questsArr[i]
		t.isMain =true
		datas[i] = t

		local children = {}
		for j = 1,1 do
			children [j] ={isMain =false}
		end
		t.children = children
	end

	tree:setList(datas)
end

function this.hide()
	error.removeListener(onErrorReceived)
	tree:setList(nil)
end

function this.initView(_,meditor)
	med = meditor
	tree = TreePane.new(med:GetUI("pane"),false,true)
	med:SetPaneFactory("pane",item)

	med:AddListener("pane",onItemClick)
end

return this