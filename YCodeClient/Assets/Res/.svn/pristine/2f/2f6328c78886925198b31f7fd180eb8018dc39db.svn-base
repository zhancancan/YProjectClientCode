local class 		= require "Class"
local base 			= require "Data_Model"
local this 			= class("Data_Npc",base)
local db 			= require "TypeDB"
local TypeClasses	= require "TypeClasses"

local table



local function getTypeData(self)
	if not table then table = db.getTable(TypeClasses.TYPE_AOE)	end
	if self then
		local rid = rawget(self,"aoeId")
		local aoe = rawget(self,"aoe")
		if not aoe then
			aoe = table:selectOne({id = rid})
			rawset(self, "aoe",aoe)
		end
		return aoe
	end
	return nil
end



local meta = {
	__index = function(t,k)
		local  def = getTypeData(t)
		if k == "name"  then
			if def then return def.name end
		elseif k == "body" then
			if def then return def.prefab end
		end
		return nil
	end

}


function this:ctor()
	setmetatable(self._data, meta)
end


function this:onSelfChange(p,_,n)
	local en = rawget (self, "entity")
	if not en then return end
	if p == "aoeId" then
		rawset(self,"aoe",nil) -- clear the npc cache
		en:ChangeModel("body",self.body)
	elseif p == "speed" then
		en.speed = n
	end
end


return this