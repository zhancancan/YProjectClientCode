//this source code was auto-generated by tolua#, do not modify it
using System;
using UnityEngine;
using LuaInterface;

public static class LuaBinder
{
	public static void Bind(LuaState L)
	{
		L.BeginModule(null);
		LuaInterface_DebuggerWrap.Register(L);
		L.BeginModule("UnityEngine");
		UnityEngine_ComponentWrap.Register(L);
		UnityEngine_RectTransformWrap.Register(L);
		UnityEngine_TransformWrap.Register(L);
		UnityEngine_MaterialWrap.Register(L);
		UnityEngine_LightWrap.Register(L);
		UnityEngine_CameraWrap.Register(L);
		UnityEngine_AudioSourceWrap.Register(L);
		UnityEngine_BehaviourWrap.Register(L);
		UnityEngine_MonoBehaviourWrap.Register(L);
		UnityEngine_GameObjectWrap.Register(L);
		UnityEngine_TrackedReferenceWrap.Register(L);
		UnityEngine_ApplicationWrap.Register(L);
		UnityEngine_PhysicsWrap.Register(L);
		UnityEngine_ColliderWrap.Register(L);
		UnityEngine_TimeWrap.Register(L);
		UnityEngine_TextureWrap.Register(L);
		UnityEngine_Texture2DWrap.Register(L);
		UnityEngine_ShaderWrap.Register(L);
		UnityEngine_RendererWrap.Register(L);
		UnityEngine_WWWWrap.Register(L);
		UnityEngine_ScreenWrap.Register(L);
		UnityEngine_CameraClearFlagsWrap.Register(L);
		UnityEngine_AudioClipWrap.Register(L);
		UnityEngine_AssetBundleWrap.Register(L);
		UnityEngine_ParticleSystemWrap.Register(L);
		UnityEngine_AsyncOperationWrap.Register(L);
		UnityEngine_LightTypeWrap.Register(L);
		UnityEngine_SleepTimeoutWrap.Register(L);
		UnityEngine_AnimatorWrap.Register(L);
		UnityEngine_InputWrap.Register(L);
		UnityEngine_KeyCodeWrap.Register(L);
		UnityEngine_SkinnedMeshRendererWrap.Register(L);
		UnityEngine_SpaceWrap.Register(L);
		UnityEngine_AnimationBlendModeWrap.Register(L);
		UnityEngine_QueueModeWrap.Register(L);
		UnityEngine_PlayModeWrap.Register(L);
		UnityEngine_WrapModeWrap.Register(L);
		UnityEngine_QualitySettingsWrap.Register(L);
		UnityEngine_RenderSettingsWrap.Register(L);
		UnityEngine_ResourcesWrap.Register(L);
		L.BeginModule("EventSystems");
		UnityEngine_EventSystems_UIBehaviourWrap.Register(L);
		L.EndModule();
		L.BeginModule("UI");
		UnityEngine_UI_MaskableGraphicWrap.Register(L);
		UnityEngine_UI_GraphicWrap.Register(L);
		UnityEngine_UI_SelectableWrap.Register(L);
		UnityEngine_UI_TextWrap.Register(L);
		UnityEngine_UI_ImageWrap.Register(L);
		L.EndModule();
		L.BeginModule("Experimental");
		L.BeginModule("Director");
		UnityEngine_Experimental_Director_DirectorPlayerWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("Events");
		L.RegFunction("UnityAction", UnityEngine_Events_UnityAction);
		L.RegFunction("UnityAction_bool", UnityEngine_Events_UnityAction_bool);
		L.EndModule();
		L.BeginModule("RectTransform");
		L.RegFunction("ReapplyDrivenProperties", UnityEngine_RectTransform_ReapplyDrivenProperties);
		L.EndModule();
		L.BeginModule("Camera");
		L.RegFunction("CameraCallback", UnityEngine_Camera_CameraCallback);
		L.EndModule();
		L.BeginModule("Application");
		L.RegFunction("AdvertisingIdentifierCallback", UnityEngine_Application_AdvertisingIdentifierCallback);
		L.RegFunction("LogCallback", UnityEngine_Application_LogCallback);
		L.EndModule();
		L.BeginModule("AudioClip");
		L.RegFunction("PCMReaderCallback", UnityEngine_AudioClip_PCMReaderCallback);
		L.RegFunction("PCMSetPositionCallback", UnityEngine_AudioClip_PCMSetPositionCallback);
		L.EndModule();
		L.EndModule();
		L.BeginModule("game");
		L.BeginModule("entity");
		L.BeginModule("game");
		L.BeginModule("version");
		game_entity_game_version_VersionGroupWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("mvc");
		L.BeginModule("view");
		game_mvc_view_PanelManagerWrap.Register(L);
		L.BeginModule("core");
		game_mvc_view_core_BaseMediatorWrap.Register(L);
		game_mvc_view_core_GameMediatorWrap.Register(L);
		game_mvc_view_core_ChildMediatorWrap.Register(L);
		game_mvc_view_core_CoverMediatorWrap.Register(L);
		game_mvc_view_core_FreeMediatorWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("pure");
		L.BeginModule("mvc");
		L.BeginModule("view");
		pure_mvc_view_MediatorCoreWrap.Register(L);
		pure_mvc_view_LuaLoaderBarWrap.Register(L);
		pure_mvc_view_SimpleLuaBarWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("ui");
		L.BeginModule("renderer");
		pure_ui_renderer_UIRendererBaseWrap.Register(L);
		pure_ui_renderer_LuaItemWrap.Register(L);
		pure_ui_renderer_SelectableItemWrap.Register(L);
		L.EndModule();
		L.BeginModule("data");
		pure_ui_data_DataProviderWrap.Register(L);
		pure_ui_data_UIColorGroup_DllWrap.Register(L);
		L.EndModule();
		L.BeginModule("element");
		pure_ui_element_MovieEventWrap.Register(L);
		pure_ui_element_PPanel_DllWrap.Register(L);
		pure_ui_element_PSpriteGraphic_DllWrap.Register(L);
		pure_ui_element_PBar_DllWrap.Register(L);
		pure_ui_element_PClickable_DllWrap.Register(L);
		pure_ui_element_PDragabel_DllWrap.Register(L);
		pure_ui_element_PDropable_DllWrap.Register(L);
		pure_ui_element_PGradientText_DllWrap.Register(L);
		pure_ui_element_PMovieClip_DllWrap.Register(L);
		pure_ui_element_PNumberField_DllWrap.Register(L);
		pure_ui_element_PButton_DllWrap.Register(L);
		pure_ui_element_PDropDown_DllWrap.Register(L);
		pure_ui_element_PImage_DllWrap.Register(L);
		pure_ui_element_PRepeatImage_DllWrap.Register(L);
		pure_ui_element_PText_DllWrap.Register(L);
		pure_ui_element_PPolyImage_DllWrap.Register(L);
		pure_ui_element_PPressable_DllWrap.Register(L);
		pure_ui_element_PResourceField_DllWrap.Register(L);
		pure_ui_element_PStar_DllWrap.Register(L);
		pure_ui_element_PTab_DllWrap.Register(L);
		pure_ui_element_PTouch_DllWrap.Register(L);
		pure_ui_element_PTouchableRect_DllWrap.Register(L);
		L.EndModule();
		L.BeginModule("events");
		pure_ui_events_ListEventWrap.Register(L);
		pure_ui_events_DropperWrap.Register(L);
		L.EndModule();
		L.BeginModule("grid");
		pure_ui_grid_GridPositionPolicyWrap.Register(L);
		pure_ui_grid_GridFactoryLua_DllWrap.Register(L);
		pure_ui_grid_GridFactoryCoreWrap.Register(L);
		L.EndModule();
		L.BeginModule("text");
		pure_ui_text_RichEmoFactoryWrap.Register(L);
		pure_ui_text_PRichText_DllWrap.Register(L);
		L.EndModule();
		L.BeginModule("tweener");
		pure_ui_tweener_UITweenParameterWrap.Register(L);
		pure_ui_tweener_UITweenDataWrap.Register(L);
		pure_ui_tweener_UITween_DllWrap.Register(L);
		L.EndModule();
		L.BeginModule("controls");
		pure_ui_controls_UIBackground_DllWrap.Register(L);
		pure_ui_controls_UIBar_DllWrap.Register(L);
		pure_ui_controls_UIButton_DllWrap.Register(L);
		pure_ui_controls_UIButtonCoreWrap.Register(L);
		pure_ui_controls_UICheckBox_DllWrap.Register(L);
		pure_ui_controls_UICombobox_DllWrap.Register(L);
		pure_ui_controls_UILabel_DllWrap.Register(L);
		pure_ui_controls_UIPortrait_DllWrap.Register(L);
		pure_ui_controls_UIRadioButton_DllWrap.Register(L);
		pure_ui_controls_UIResourceField_DllWrap.Register(L);
		pure_ui_controls_UIRichText_DllWrap.Register(L);
		pure_ui_controls_UISlider_DllWrap.Register(L);
		pure_ui_controls_UIStar_DllWrap.Register(L);
		pure_ui_controls_UITabNavigagor_DllWrap.Register(L);
		pure_ui_controls_UITextInput_DllWrap.Register(L);
		L.EndModule();
		L.BeginModule("core");
		pure_ui_core_UICoreWrap.Register(L);
		L.EndModule();
		L.BeginModule("container");
		pure_ui_container_UIDataPane_DllWrap.Register(L);
		pure_ui_container_BaseDataPaneWrap.Register(L);
		pure_ui_container_BaseScrollPaneWrap.Register(L);
		pure_ui_container_ItemPane_DllWrap.Register(L);
		pure_ui_container_ItemPaneCoreWrap.Register(L);
		pure_ui_container_UITextArea_DllWrap.Register(L);
		pure_ui_container_TreePane_DllWrap.Register(L);
		L.EndModule();
		L.BeginModule("uispace3d");
		pure_ui_uispace3d_PortraitCache_DllWrap.Register(L);
		L.EndModule();
		L.BeginModule("hud");
		pure_ui_hud_Text3D_DllWrap.Register(L);
		pure_ui_hud_SpriteBaseWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("asset");
		L.BeginModule("manager");
		pure_asset_manager_VersionManagerWrap.Register(L);
		L.BeginModule("utils");
		pure_asset_manager_utils_FxFileUtilsWrap.Register(L);
		pure_asset_manager_utils_IconUtilsWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("database");
		L.BeginModule("core");
		pure_database_core_DataBaseWrap.Register(L);
		pure_database_core_DataWrap.Register(L);
		pure_database_core_TableWrap.Register(L);
		pure_database_core_Data_DescriptionWrap.Register(L);
		L.EndModule();
		L.BeginModule("structure");
		L.BeginModule("tree");
		pure_database_structure_tree_CompStatusWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("entity");
		L.BeginModule("label");
		pure_entity_label_LuaLabelWrap.Register(L);
		pure_entity_label_LabelBaseWrap.Register(L);
		L.EndModule();
		L.BeginModule("renderer");
		pure_entity_renderer_BuffRendererWrap.Register(L);
		L.EndModule();
		L.BeginModule("core");
		pure_entity_core_FightableEntityWrap.Register(L);
		pure_entity_core_ModelEntityWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("lua");
		pure_lua_LuaEntityWrap.Register(L);
		L.EndModule();
		L.BeginModule("stateMachine");
		L.BeginModule("core");
		pure_stateMachine_core_ComplexEntityWrap.Register(L);
		pure_stateMachine_core_EntityWrap.Register(L);
		L.EndModule();
		L.BeginModule("share");
		L.BeginModule("actions");
		L.BeginModule("CpxAct_Lua");
		pure_stateMachine_share_actions_CpxAct_Lua_RpxAct_ToluaWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("condition");
		L.BeginModule("CpxCondition_Lua");
		pure_stateMachine_share_condition_CpxCondition_Lua_RxpCondition_LuaWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("machine");
		L.BeginModule("runtime");
		pure_stateMachine_machine_runtime_RpxAction_pure_stateMachine_share_actions_CpxAct_LuaWrap.Register(L);
		pure_stateMachine_machine_runtime_RpxActionWrap.Register(L);
		pure_stateMachine_machine_runtime_RpxCoreWrap.Register(L);
		pure_stateMachine_machine_runtime_RpxCondition_pure_stateMachine_share_condition_CpxCondition_LuaWrap.Register(L);
		pure_stateMachine_machine_runtime_RpxConditionWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("net");
		L.BeginModule("socket");
		pure_net_socket_LuaBytesWrap.Register(L);
		pure_net_socket_LuaHttpWrap.Register(L);
		pure_net_socket_LuaServerWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("refactor");
		L.BeginModule("data");
		pure_refactor_data_DynamicDataWrap.Register(L);
		pure_refactor_data_SocketFormWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("scene");
		L.BeginModule("manager");
		pure_scene_manager_SceneEventTypeWrap.Register(L);
		pure_scene_manager_SceneEntityWrap.Register(L);
		pure_scene_manager_SceneEntityManagerWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("ticker");
		pure_ticker_SystemTimeWrap.Register(L);
		L.EndModule();
		L.BeginModule("utils");
		L.BeginModule("caculation");
		pure_utils_caculation_FormularWrap.Register(L);
		L.EndModule();
		L.BeginModule("localCache");
		pure_utils_localCache_LocalDataWrap.Register(L);
		L.EndModule();
		L.BeginModule("native");
		pure_utils_native_NativeManagerWrap.Register(L);
		pure_utils_native_NativeMethodWrap.Register(L);
		L.EndModule();
		L.BeginModule("tween");
		pure_utils_tween_EasePathTypeWrap.Register(L);
		pure_utils_tween_TweenTargetModeWrap.Register(L);
		pure_utils_tween_EaseTypeWrap.Register(L);
		pure_utils_tween_TweenCoreWrap.Register(L);
		pure_utils_tween_TweenDataWrap.Register(L);
		pure_utils_tween_TweenParamaterWrap.Register(L);
		pure_utils_tween_TweenDirectionWrap.Register(L);
		pure_utils_tween_TweenGroupWrap.Register(L);
		pure_utils_tween_TweenGroupModeWrap.Register(L);
		pure_utils_tween_TweenLoopTypeWrap.Register(L);
		pure_utils_tween_TweenStateWrap.Register(L);
		pure_utils_tween_TweenWaitWrap.Register(L);
		L.RegFunction("TweenEasingCallback", pure_utils_tween_TweenEasingCallback);
		L.RegFunction("TweenCallback", pure_utils_tween_TweenCallback);
		L.EndModule();
		L.EndModule();
		L.BeginModule("voiceChat");
		L.BeginModule("core");
		pure_voiceChat_core_VoicePacketWrap.Register(L);
		L.EndModule();
		L.BeginModule("mono");
		pure_voiceChat_mono_ChatStatusWrap.Register(L);
		pure_voiceChat_mono_ChatControl_DllWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("mono");
		L.BeginModule("ui");
		L.BeginModule("controls");
		mono_ui_controls_UIBackgroundWrap.Register(L);
		mono_ui_controls_UIBarWrap.Register(L);
		mono_ui_controls_UIButtonWrap.Register(L);
		mono_ui_controls_UICheckBoxWrap.Register(L);
		mono_ui_controls_UIComboboxWrap.Register(L);
		mono_ui_controls_UIDataPaneWrap.Register(L);
		mono_ui_controls_UIItemPanelWrap.Register(L);
		mono_ui_controls_UILabelWrap.Register(L);
		mono_ui_controls_UIPortraitWrap.Register(L);
		mono_ui_controls_UIRadioButtonWrap.Register(L);
		mono_ui_controls_UIResourceFieldWrap.Register(L);
		mono_ui_controls_UIRichTextWrap.Register(L);
		mono_ui_controls_UISliderWrap.Register(L);
		mono_ui_controls_UIStarWrap.Register(L);
		mono_ui_controls_UITabNavigatorWrap.Register(L);
		mono_ui_controls_UITextAreaWrap.Register(L);
		mono_ui_controls_UITextInputWrap.Register(L);
		mono_ui_controls_UITreePaneWrap.Register(L);
		L.EndModule();
		L.BeginModule("elements");
		mono_ui_elements_BarWrap.Register(L);
		mono_ui_elements_ClickableWrap.Register(L);
		mono_ui_elements_DraggableWrap.Register(L);
		mono_ui_elements_DropableWrap.Register(L);
		mono_ui_elements_GradientTextWrap.Register(L);
		mono_ui_elements_MovieClipWrap.Register(L);
		mono_ui_elements_NumberFieldWrap.Register(L);
		mono_ui_elements_PButtonWrap.Register(L);
		mono_ui_elements_PDropdownWrap.Register(L);
		mono_ui_elements_PImageWrap.Register(L);
		mono_ui_elements_PRepeatImageWrap.Register(L);
		mono_ui_elements_PTextWrap.Register(L);
		mono_ui_elements_PolyImageWrap.Register(L);
		mono_ui_elements_PortraitCacheWrap.Register(L);
		mono_ui_elements_PressableWrap.Register(L);
		mono_ui_elements_ResourceFieldWrap.Register(L);
		mono_ui_elements_RichTextWrap.Register(L);
		mono_ui_elements_SpriteGraphicWrap.Register(L);
		mono_ui_elements_StarWrap.Register(L);
		mono_ui_elements_TabWrap.Register(L);
		mono_ui_elements_TouchControlWrap.Register(L);
		mono_ui_elements_TouchableRectWrap.Register(L);
		L.EndModule();
		L.BeginModule("grid");
		mono_ui_grid_GridFactory_LuaWrap.Register(L);
		L.EndModule();
		L.BeginModule("hud");
		mono_ui_hud_Text3DWrap.Register(L);
		L.EndModule();
		L.BeginModule("utils");
		mono_ui_utils_UIColorGroupWrap.Register(L);
		mono_ui_utils_UITweenWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("voiceChat");
		mono_voiceChat_ChatControlWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("System");
		L.RegFunction("Action", System_Action);
		L.RegFunction("Predicate_int", System_Predicate_int);
		L.RegFunction("Action_int", System_Action_int);
		L.RegFunction("Comparison_int", System_Comparison_int);
		L.RegFunction("Func_int_int", System_Func_int_int);
		L.RegFunction("Action_pure_mvc_view_MediatorEventType_pure_mvc_view_MediatorCore", System_Action_pure_mvc_view_MediatorEventType_pure_mvc_view_MediatorCore);
		L.RegFunction("Func_string_pure_treeComp_firefx_core_FireFxRoot", System_Func_string_pure_treeComp_firefx_core_FireFxRoot);
		L.RegFunction("Predicate_pure_database_interfaces_IData", System_Predicate_pure_database_interfaces_IData);
		L.RegFunction("Action_pure_database_interfaces_IData", System_Action_pure_database_interfaces_IData);
		L.RegFunction("Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData", System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData);
		L.RegFunction("Action_string_string", System_Action_string_string);
		L.RegFunction("Action_string_object_object", System_Action_string_object_object);
		L.RegFunction("Action_pure_net_http_LoadStatus", System_Action_pure_net_http_LoadStatus);
		L.RegFunction("Action_pure_scene_manager_SceneEventType", System_Action_pure_scene_manager_SceneEventType);
		L.RegFunction("Action_LuaInterface_LuaTable", System_Action_LuaInterface_LuaTable);
		L.RegFunction("Action_pure_utils_json_JsonNode", System_Action_pure_utils_json_JsonNode);
		L.RegFunction("Action_string", System_Action_string);
		L.RegFunction("Action_string_bool", System_Action_string_bool);
		L.RegFunction("Action_string_int", System_Action_string_int);
		L.RegFunction("Action_string_pure_ui_events_ListEvent", System_Action_string_pure_ui_events_ListEvent);
		L.RegFunction("Action_string_pure_ui_events_Dropper", System_Action_string_pure_ui_events_Dropper);
		L.RegFunction("Action_pure_ui_element_MovieEvent", System_Action_pure_ui_element_MovieEvent);
		L.RegFunction("Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket", System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket);
		L.EndModule();
		L.EndModule();
		L.BeginPreLoad();
		L.AddPreLoad("UnityEngine.MeshRenderer", LuaOpen_UnityEngine_MeshRenderer, typeof(UnityEngine.MeshRenderer));
		L.AddPreLoad("UnityEngine.BoxCollider", LuaOpen_UnityEngine_BoxCollider, typeof(UnityEngine.BoxCollider));
		L.AddPreLoad("UnityEngine.MeshCollider", LuaOpen_UnityEngine_MeshCollider, typeof(UnityEngine.MeshCollider));
		L.AddPreLoad("UnityEngine.SphereCollider", LuaOpen_UnityEngine_SphereCollider, typeof(UnityEngine.SphereCollider));
		L.AddPreLoad("UnityEngine.CharacterController", LuaOpen_UnityEngine_CharacterController, typeof(UnityEngine.CharacterController));
		L.AddPreLoad("UnityEngine.CapsuleCollider", LuaOpen_UnityEngine_CapsuleCollider, typeof(UnityEngine.CapsuleCollider));
		L.AddPreLoad("UnityEngine.Animation", LuaOpen_UnityEngine_Animation, typeof(UnityEngine.Animation));
		L.AddPreLoad("UnityEngine.AnimationClip", LuaOpen_UnityEngine_AnimationClip, typeof(UnityEngine.AnimationClip));
		L.AddPreLoad("UnityEngine.AnimationState", LuaOpen_UnityEngine_AnimationState, typeof(UnityEngine.AnimationState));
		L.AddPreLoad("UnityEngine.BlendWeights", LuaOpen_UnityEngine_BlendWeights, typeof(UnityEngine.BlendWeights));
		L.AddPreLoad("UnityEngine.RenderTexture", LuaOpen_UnityEngine_RenderTexture, typeof(UnityEngine.RenderTexture));
		L.AddPreLoad("UnityEngine.Rigidbody", LuaOpen_UnityEngine_Rigidbody, typeof(UnityEngine.Rigidbody));
		L.EndPreLoad();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.Events.UnityAction>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.Events.UnityAction>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction_bool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.Events.UnityAction<bool>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.Events.UnityAction<bool>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Camera_CameraCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.Camera.CameraCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.Camera.CameraCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Application_LogCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.Application.LogCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.Application.LogCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_AudioClip_PCMReaderCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int pure_utils_tween_TweenEasingCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<pure.utils.tween.TweenEasingCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<pure.utils.tween.TweenEasingCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int pure_utils_tween_TweenCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<pure.utils.tween.TweenCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<pure.utils.tween.TweenCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_int(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Predicate<int>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Predicate<int>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_int(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<int>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<int>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_int(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Comparison<int>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Comparison<int>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Func_int_int(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Func<int,int>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Func<int,int>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_mvc_view_MediatorEventType_pure_mvc_view_MediatorCore(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.mvc.view.MediatorEventType,pure.mvc.view.MediatorCore>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.mvc.view.MediatorEventType,pure.mvc.view.MediatorCore>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Func_string_pure_treeComp_firefx_core_FireFxRoot(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Func<string,pure.treeComp.firefx.core.FireFxRoot>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Func<string,pure.treeComp.firefx.core.FireFxRoot>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_pure_database_interfaces_IData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Predicate<pure.database.interfaces.IData>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Predicate<pure.database.interfaces.IData>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_database_interfaces_IData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.database.interfaces.IData>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.database.interfaces.IData>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_database_core_Table_DataEvent_pure_database_interfaces_IData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.database.core.Table.DataEvent,pure.database.interfaces.IData>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_string_string(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<string,string>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<string,string>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_string_object_object(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<string,object,object>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<string,object,object>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_net_http_LoadStatus(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.net.http.LoadStatus>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.net.http.LoadStatus>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_scene_manager_SceneEventType(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.scene.manager.SceneEventType>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.scene.manager.SceneEventType>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_LuaInterface_LuaTable(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<LuaInterface.LuaTable>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<LuaInterface.LuaTable>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_utils_json_JsonNode(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.utils.json.JsonNode>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.utils.json.JsonNode>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_string(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<string>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<string>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_string_bool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<string,bool>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<string,bool>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_string_int(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<string,int>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<string,int>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_string_pure_ui_events_ListEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<string,pure.ui.events.ListEvent>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<string,pure.ui.events.ListEvent>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_string_pure_ui_events_Dropper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<string,pure.ui.events.Dropper>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<string,pure.ui.events.Dropper>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_ui_element_MovieEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.ui.element.MovieEvent>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.ui.element.MovieEvent>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_pure_voiceChat_mono_ChatStatus_pure_voiceChat_core_VoicePacket(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<System.Action<pure.voiceChat.mono.ChatStatus,pure.voiceChat.core.VoicePacket>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_MeshRenderer(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_MeshRendererWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.MeshRenderer));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_BoxCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_BoxColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.BoxCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_MeshCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_MeshColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.MeshCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_SphereCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_SphereColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.SphereCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_CharacterController(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_CharacterControllerWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.CharacterController));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_CapsuleCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_CapsuleColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.CapsuleCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_Animation(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_AnimationWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.Animation));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_AnimationClip(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_AnimationClipWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.AnimationClip));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_AnimationState(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_AnimationStateWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.AnimationState));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_BlendWeights(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_BlendWeightsWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.BlendWeights));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_RenderTexture(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_RenderTextureWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.RenderTexture));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_Rigidbody(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_RigidbodyWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.Rigidbody));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

